{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","freeze","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","FN","_defineProperty","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","toComponents","source","Color","isColor","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","toString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","concat","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","toJSON","_context3","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","_callSuper","isTexture","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_context4","WebGLRenderTarget","_EventDispatcher2","_this3","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context5","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","_context6","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix$1","_quaternion$3","Euler","DefaultOrder","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context7","toVector3","error","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DefaultMatrixWorldAutoUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","copyColorsArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","Float64BufferAttribute","_BufferAttribute10","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","_this$children","_slicedToArray","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","err","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this24","isMeshDepthMaterial","_Material4","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_this26","isArrayCamera","cameras","Group","_Object3D4","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","_iterator2","_step2","inputjoint","jointPose","getJointPose","jointName","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","DepthTexture","_Texture4","_this28","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","prepare","getProgram","material2","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","_Mesh2","_this38","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_Material6","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this41","LineLoop","_Line2","_this42","_Material7","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this46","CompressedTexture","_Texture8","_this47","CanvasTexture","_Texture9","_this48","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_this49","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this50","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this51","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this52","v3","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this53","isCubicBezierCurve3","LineCurve","_Curve5","_this54","isLineCurve","LineCurve3","_Curve6","_this55","isLineCurve3","QuadraticBezierCurve","_Curve7","_this56","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this57","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this58","isSplineCurve","Curves","CurvePath","_Curve10","_this59","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this60","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this61","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this62","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this63","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this64","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this65","PolyhedronGeometry","_BufferGeometry6","_this66","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this67","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this68","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this69","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this70","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this71","OctahedronGeometry","_PolyhedronGeometry3","_this72","RingGeometry","_BufferGeometry9","_this73","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this74","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this75","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this76","TorusGeometry","_BufferGeometry12","_this77","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this78","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this79","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this80","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this81","RawShaderMaterial","_ShaderMaterial","_this82","_Material9","_this83","_MeshStandardMaterial","_this84","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_this85","_Material11","_this86","_Material12","_this87","_Material13","_this88","_Material14","_this89","_LineBasicMaterial","_this90","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","response","_this92","_wrapNativeSuper","FileLoader","_Loader","_this93","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this94","HemisphereLight","_Light","_this95","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this96","isSpotLightShadow","SpotLight","_Light2","_this97","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this98","_cubeDirections","_cubeUps","PointLight","_Light3","_this99","DirectionalLightShadow","_LightShadow3","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_this101","AmbientLight","_Light5","_this102","RectAreaLight","_Light6","_this103","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this104","MaterialLoader","_Loader8","_this105","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this106","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this107","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_this108","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_this109","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this110","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this111","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this112","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this113","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_this114","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this115","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this116","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this117","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","sphereSize","_this118","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this119","GridHelper","_LineSegments2","_this120","PolarGridHelper","_LineSegments3","_this121","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this122","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this123","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this124","Box3Helper","_LineSegments6","_this125","PlaneHelper","_Line3","_this126","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this127","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this128","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ImmediateRenderObject","WebGLMultisampleRenderTarget","_WebGLRenderTarget5","_this129","DataTexture2DArray","_DataArrayTexture","DataTexture3D","_Data3DTexture","BoxBufferGeometry","_BoxGeometry","CapsuleBufferGeometry","_CapsuleGeometry","CircleBufferGeometry","_CircleGeometry","ConeBufferGeometry","_ConeGeometry","CylinderBufferGeometry","_CylinderGeometry2","DodecahedronBufferGeometry","_DodecahedronGeometry","ExtrudeBufferGeometry","_ExtrudeGeometry","IcosahedronBufferGeometry","_IcosahedronGeometry","LatheBufferGeometry","_LatheGeometry2","OctahedronBufferGeometry","_OctahedronGeometry","PlaneBufferGeometry","_PlaneGeometry","PolyhedronBufferGeometry","_PolyhedronGeometry5","RingBufferGeometry","_RingGeometry","ShapeBufferGeometry","_ShapeGeometry","SphereBufferGeometry","_SphereGeometry","TetrahedronBufferGeometry","_TetrahedronGeometry","TorusBufferGeometry","_TorusGeometry","TorusKnotBufferGeometry","_TorusKnotGeometry","TubeBufferGeometry","_TubeGeometry","revision","__THREE__","_three","require","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","subClass","superClass","_setPrototypeOf","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","pointer","passive","MapControls","_OrbitControls","THREE","_interopRequireWildcard","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","orbit","highlightMesh","mousePosition","highlightPos","objectExist","sphereMesh","clicks","newMesh","animate","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","bundle","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '145';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022; // @deprecated since r137\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// handle empty sphere cases\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t} else if ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DefaultMatrixWorldAutoUpdate; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.DefaultMatrixWorldAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import \"./styles.css\";\n\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\n\nconst renderer = new THREE.WebGLRenderer();\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\n\ndocument.body.appendChild(renderer.domElement);\n\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera(\n    45,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n);\n\nconst orbit = new OrbitControls(camera, renderer.domElement);\n\ncamera.position.set(10, 15, -22);\n\norbit.update();\n\nconst planeMesh = new THREE.Mesh(\n    new THREE.PlaneGeometry(20, 20),\n    new THREE.MeshBasicMaterial({\n        side: THREE.DoubleSide,\n        visible: false\n    })\n);\nplaneMesh.rotateX(-Math.PI / 2);\nscene.add(planeMesh);\n\nconst grid = new THREE.GridHelper(20, 20);\nscene.add(grid);\n\nconst highlightMesh = new THREE.Mesh(\n    new THREE.PlaneGeometry(1, 1),\n    new THREE.MeshBasicMaterial({\n        side: THREE.DoubleSide,\n        transparent: true\n    })\n);\nhighlightMesh.rotateX(-Math.PI / 2);\nhighlightMesh.position.set(0.5, 0, 0.5);\nscene.add(highlightMesh);\n\nconst mousePosition = new THREE.Vector2();\nconst raycaster = new THREE.Raycaster();\nlet intersects;\n\nwindow.addEventListener('mousemove', function(e) {\n    mousePosition.x = (e.clientX / window.innerWidth) * 2 - 1;\n    mousePosition.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    raycaster.setFromCamera(mousePosition, camera);\n    intersects = raycaster.intersectObject(planeMesh);\n    if(intersects.length > 0) {\n        const intersect = intersects[0];\n        const highlightPos = new THREE.Vector3().copy(intersect.point).floor().addScalar(0.5);\n        highlightMesh.position.set(highlightPos.x, 0, highlightPos.z);\n\n        const objectExist = objects.find(function(object) {\n            return (object.position.x === highlightMesh.position.x)\n            && (object.position.z === highlightMesh.position.z)\n        });\n\n        if(!objectExist)\n            highlightMesh.material.color.setHex(0xFFFFFF);\n        else\n            highlightMesh.material.color.setHex(0xFF0000);\n    }\n\n    \n});\n\nconst sphereMesh = new THREE.Mesh(\n    new THREE.SphereGeometry(0.4, 4, 2),\n    new THREE.MeshBasicMaterial({\n        wireframe: true,\n        color: 0xFFEA00\n    })\n);\n\nconst objects = [];\nlet clicks = 1\n\nwindow.addEventListener('mousedown', function() {\n    const objectExist = objects.find(function(object) {\n        return (object.position.x === highlightMesh.position.x)\n        && (object.position.z === highlightMesh.position.z)\n    });\n\n\n    const newMesh = new THREE.Mesh(\n        new THREE.PlaneGeometry(1, 1),\n        new THREE.MeshBasicMaterial({\n            side: THREE.DoubleSide,\n            transparent: true\n        })\n    );\n    newMesh.rotateX(-Math.PI / 2);\n    newMesh.position.copy(highlightMesh.position);\n    if(clicks == 1) {\n        newMesh.material.color.setHex(0xAAFF00)\n        clicks += 1\n    } else if(clicks == 2) {\n        newMesh.material.color.setHex(0xFF0000)\n        clicks += 1\n    }\n    scene.add(newMesh);\n\n    let x = newMesh.position.x;\n    let y = newMesh.position.y;\n    let z = newMesh.position.z;\n\n    console.log('Current location: ' + x + ', ' + y + ', ' + z)\n\n\n\n\n\n\n\n\n\n\n\n    if(!objectExist) {\n        if(intersects.length > 0) {\n            // const sphereClone = sphereMesh.clone();\n            // sphereClone.position.copy(highlightMesh.position);\n            // scene.add(sphereClone);\n            // objects.push(sphereClone);\n            // highlightMesh.material.color.setHex(0xFF0000);\n            // console.log(\"Item pushed @ \" + sphereClone.position.x +\", \"+ sphereClone.position.y +\", \"+ sphereClone.position.z);\n            // console.log(objects)\n            highlightMesh.material.color.setHex(0xFFFFFF);\n        }\n    } else {\n        console.log(\"Item is here\")\n    }\n    console.log(scene.children.length);\n});\n\nfunction animate(time) {\n    highlightMesh.material.opacity = 1 + Math.sin(time / 120);\n    objects.forEach(function(object) {\n        object.rotation.x = time / 1000;\n        object.rotation.z = time / 1000;\n        object.position.y = 0.5 + 0.5 * Math.abs(Math.sin(time / 1000));\n    });\n    renderer.render(scene, camera);\n}\n\nrenderer.setAnimationLoop(animate);\n\nwindow.addEventListener('resize', function() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n});\n\n\n// import * as THREE from 'three';\n// import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';\n\n// // npm install parcel -g\n// // npm install three\n// // parcel ./index.html -> boots server to run locally\n\n\n\n\n// const renderer = new THREE.WebGL1Renderer();\n// renderer.setSize(window.innerWidth, window.innerHeight)\n// document.body.appendChild(renderer.domElement)\n\n// const scene = new THREE.Scene();\n// const camera = new THREE.PerspectiveCamera(\n//     45,\n//     window.innerWidth / window.innerHeight,\n//     0.1,\n//     1000\n// );\n\n// const orbit = new OrbitControls(camera, renderer.domElement);\n// camera.position.set(10,15,-22);\n\n// orbit.update()\n\n// // Create the plane\n// const planeMesh = new THREE.Mesh(\n//     new THREE.PlaneGeometry(20, 20),\n//     new THREE.MeshBasicMaterial(\n//         {\n//             side: THREE.DoubleSide,\n//             visible: false,\n//         }\n//     )\n// );\n// planeMesh.rotateX(-Math.PI / 2);\n// scene.add(planeMesh);\n// planeMesh.name = 'ground';\n\n\n// // Create the grid on the plane\n// const grid = new THREE.GridHelper(20,20);\n// scene.add(grid);\n\n// // Create Highlight Square\n// const highlightMesh = new THREE.Mesh(\n//     new THREE.PlaneGeometry(1, 1),\n//     new THREE.MeshBasicMaterial(\n//         {\n//             side: THREE.DoubleSide,\n//         }\n//     )\n// );\n// highlightMesh.rotateX(-Math.PI / 2);\n// highlightMesh.position.set(0.5, 0, 0.5)\n// scene.add(highlightMesh);\n\n// // Dealing with Ray castor??\n// const mousePosition = new THREE.Vector2();\n// const raycaster = new THREE.Raycaster();\n// let intersects;\n\n// window.addEventListener('mousemove', function(e) {\n//     mousePosition.x = (e.clientX / window.innerWidth) * 2 - 1;\n//     mousePosition.y = -(e.clienty / window.innerHeight) * 2 + 1;\n//     raycaster.setFromCamera(mousePosition, camera);\n//     intersects = raycaster.intersectObject(planeMesh)\n//     if(intersects.length > 0) {\n//         const intersect = intersects[0];\n//         const highlightPos = new THREE.Vectory3().copy(intersect.point).floor().addScalar(0.5);\n//         highlightMesh.position.set(highlightPos.x, 0, highlightPos.z);\n\n//         const objectExist = objects.find(function(object) {\n//             return (object.position.x === highlightMesh.position.x) && (object.position.z === highlightMesh.position.z)\n//         });\n\n//         if(!objectExist) {\n//             highlightMesh.material.color.setHex(0xFFFFFF);\n//         } else {\n//             highlightMesh.material.color.setHex(0xFF0000);\n//         }\n//     }\n//     // intersects = raycaster.intersectObjects(scene.children);\n//     // intersects.forEach(function(intersect) {\n//     //     if(intersect.object.name === 'ground') {\n//     //         const highlightPos = new THREE.Vector3().copy(intersect.point).floor().addScalar(0.5);\n//     //         highlightMesh.position.set(highlightPos.x, 0, highlightPos.z);\n//     //     }\n//     // });\n// });\n\n\n\n// function animate() {\n//     renderer.render(scene, camera);\n// }\n\n// renderer.setAnimationLoop(animate);\n\n// window.addEventListener('resize', function() {\n//     camera.aspect = window.innerWidth / window.innerHeight;\n//     camera.updateProjectionMatrix();\n//     renderer.setSize(window.innerWidth, window.innerHeight)\n// });\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}